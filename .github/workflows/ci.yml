name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID }}
      SECRET_FIREBASE_TYPE: ${{ secrets.SECRET_FIREBASE_TYPE }}
      SECRET_FIREBASE_PROJECT_ID: ${{ secrets.SECRET_FIREBASE_PROJECT_ID }}
      SECRET_FIREBASE_PRIVATE_KEY_ID: ${{ secrets.SECRET_FIREBASE_PRIVATE_KEY_ID }}
      SECRET_FIREBASE_PRIVATE_KEY: ${{ secrets.SECRET_FIREBASE_PRIVATE_KEY }}
      SECRET_FIREBASE_CLIENT_EMAIL: ${{ secrets.SECRET_FIREBASE_CLIENT_EMAIL }}
      SECRET_FIREBASE_CLIENT_ID: ${{ secrets.SECRET_FIREBASE_CLIENT_ID }}
      SECRET_FIREBASE_AUTH_URI: ${{ secrets.SECRET_FIREBASE_AUTH_URI }}
      SECRET_FIREBASE_TOKEN_URI: ${{ secrets.SECRET_FIREBASE_TOKEN_URI }}
      SECRET_FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.SECRET_FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      SECRET_FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.SECRET_FIREBASE_CLIENT_X509_CERT_URL }}
      SECRET_FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.SECRET_FIREBASE_UNIVERSE_DOMAIN }}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci --legacy-peer-deps
    - run: npm run lint
    - run: npm test
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: yeungkelvin/projmgmt:latest
